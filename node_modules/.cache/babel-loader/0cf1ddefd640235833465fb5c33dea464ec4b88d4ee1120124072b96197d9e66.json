{"ast":null,"code":"import React,{useContext}from'react';import{Box,Typography}from'@mui/material';import{ScrollMenu,VisibilityContext}from'react-horizontal-scrolling-menu';//import 'react-horizontal-scrolling-menu/dist/styles.css';\nimport BodyPart from'./BodyPart';// Render this inside HorizontalScrollbar\nimport ExerciseCard from'./ExerciseCard';import LeftArrowIcon from'../assets/icons/left-arrow.png';import RightArrowIcon from'../assets/icons/right-arrow.png';import{jsx as _jsx}from\"react/jsx-runtime\";const LeftArrow=()=>{const{scrollPrev}=useContext(VisibilityContext);return/*#__PURE__*/_jsx(Typography,{onClick:()=>scrollPrev(),className:\"right-arrow\",children:/*#__PURE__*/_jsx(\"img\",{src:LeftArrowIcon,alt:\"left-arrow\"})});};const RightArrow=()=>{const{scrollNext}=useContext(VisibilityContext);return/*#__PURE__*/_jsx(Typography,{onClick:()=>scrollNext(),className:\"left-arrow\",children:/*#__PURE__*/_jsx(\"img\",{src:RightArrowIcon,alt:\"right-arrow\"})});};const HorizontalScrollbar=_ref=>{let{data,bodyPart,setBodyPart,isBodyParts,maxWidth='1000px'}=_ref;// console.log('setBodyPart in HorizontalScrollbar:', setBodyPart);\nreturn/*#__PURE__*/_jsx(Box,{sx:{width:'100%',position:'relative',mx:'auto',maxWidth:{xs:'400px',md:maxWidth}},children:/*#__PURE__*/_jsx(ScrollMenu,{LeftArrow:LeftArrow,RightArrow:RightArrow,children:data.map(item=>/*#__PURE__*/_jsx(Box,{itemId:item.id||item,title:item.id||item,m:\"0 40px\",children:isBodyParts?/*#__PURE__*/_jsx(BodyPart,{item:item,bodyPart:bodyPart,setBodyPart:setBodyPart}):/*#__PURE__*/_jsx(ExerciseCard,{exercise:item})},item.id||item))})});};export default HorizontalScrollbar;","map":{"version":3,"names":["React","useContext","Box","Typography","ScrollMenu","VisibilityContext","BodyPart","ExerciseCard","LeftArrowIcon","RightArrowIcon","jsx","_jsx","LeftArrow","scrollPrev","onClick","className","children","src","alt","RightArrow","scrollNext","HorizontalScrollbar","_ref","data","bodyPart","setBodyPart","isBodyParts","maxWidth","sx","width","position","mx","xs","md","map","item","itemId","id","title","m","exercise"],"sources":["/Users/weichinglim/Desktop/React/fitness-website/src/components/HorizontalScrollbar.js"],"sourcesContent":["import React, {useContext} from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { ScrollMenu, VisibilityContext } from 'react-horizontal-scrolling-menu';\n//import 'react-horizontal-scrolling-menu/dist/styles.css';\n\nimport BodyPart from './BodyPart'; // Render this inside HorizontalScrollbar\nimport ExerciseCard from './ExerciseCard';\n\nimport LeftArrowIcon from '../assets/icons/left-arrow.png';\nimport RightArrowIcon from '../assets/icons/right-arrow.png';\n\nconst LeftArrow = () => {\n    const {scrollPrev} = useContext(VisibilityContext);\n    \n    return (\n        <Typography onClick={() => scrollPrev()} className='right-arrow' >\n            <img src={LeftArrowIcon} alt='left-arrow' />\n        </Typography>\n    );\n};\n\nconst RightArrow = () => {\n    const {scrollNext} = useContext(VisibilityContext);\n\n    return (\n        <Typography onClick={() => scrollNext()} className='left-arrow' >\n            <img src={RightArrowIcon} alt='right-arrow' />\n        </Typography>\n    );\n};\n\nconst HorizontalScrollbar = ({data, bodyPart, setBodyPart, isBodyParts, maxWidth = '1000px'}) => {\n// console.log('setBodyPart in HorizontalScrollbar:', setBodyPart);\n  return (\n    <Box sx={{ width: '100%', position: 'relative', mx: 'auto', maxWidth: { xs: '400px', md: maxWidth }}}>\n        <ScrollMenu LeftArrow={LeftArrow} RightArrow={RightArrow} >\n            {data.map((item) => (\n                    <Box\n                        key={item.id || item}\n                        itemId={item.id || item}\n                        title={item.id || item}\n                        m='0 40px'\n                    >\n                        {/* {item} Now items are listed. (5) Create a BodyPart.js component to display in cards. Render it below */}\n                        {isBodyParts ? <BodyPart item={item} bodyPart={bodyPart} setBodyPart={setBodyPart} />\n                            : <ExerciseCard exercise={item} />}\n                    </Box>\n                )\n            )}\n        </ScrollMenu> \n    </Box>  \n  )\n}\n\nexport default HorizontalScrollbar"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,UAAU,KAAO,OAAO,CACvC,OAASC,GAAG,CAAEC,UAAU,KAAQ,eAAe,CAC/C,OAASC,UAAU,CAAEC,iBAAiB,KAAQ,iCAAiC,CAC/E;AAEA,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAE;AACnC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CAEzC,MAAO,CAAAC,aAAa,KAAM,gCAAgC,CAC1D,MAAO,CAAAC,cAAc,KAAM,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7D,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,UAAU,CAAC,CAAGZ,UAAU,CAACI,iBAAiB,CAAC,CAElD,mBACIM,IAAA,CAACR,UAAU,EAACW,OAAO,CAAEA,CAAA,GAAMD,UAAU,CAAC,CAAE,CAACE,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC5DL,IAAA,QAAKM,GAAG,CAAET,aAAc,CAACU,GAAG,CAAC,YAAY,CAAE,CAAC,CACpC,CAAC,CAErB,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,UAAU,CAAC,CAAGnB,UAAU,CAACI,iBAAiB,CAAC,CAElD,mBACIM,IAAA,CAACR,UAAU,EAACW,OAAO,CAAEA,CAAA,GAAMM,UAAU,CAAC,CAAE,CAACL,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC3DL,IAAA,QAAKM,GAAG,CAAER,cAAe,CAACS,GAAG,CAAC,aAAa,CAAE,CAAC,CACtC,CAAC,CAErB,CAAC,CAED,KAAM,CAAAG,mBAAmB,CAAGC,IAAA,EAAqE,IAApE,CAACC,IAAI,CAAEC,QAAQ,CAAEC,WAAW,CAAEC,WAAW,CAAEC,QAAQ,CAAG,QAAQ,CAAC,CAAAL,IAAA,CAC5F;AACE,mBACEX,IAAA,CAACT,GAAG,EAAC0B,EAAE,CAAE,CAAEC,KAAK,CAAE,MAAM,CAAEC,QAAQ,CAAE,UAAU,CAAEC,EAAE,CAAE,MAAM,CAAEJ,QAAQ,CAAE,CAAEK,EAAE,CAAE,OAAO,CAAEC,EAAE,CAAEN,QAAS,CAAC,CAAE,CAAAX,QAAA,cACjGL,IAAA,CAACP,UAAU,EAACQ,SAAS,CAAEA,SAAU,CAACO,UAAU,CAAEA,UAAW,CAAAH,QAAA,CACpDO,IAAI,CAACW,GAAG,CAAEC,IAAI,eACPxB,IAAA,CAACT,GAAG,EAEAkC,MAAM,CAAED,IAAI,CAACE,EAAE,EAAIF,IAAK,CACxBG,KAAK,CAAEH,IAAI,CAACE,EAAE,EAAIF,IAAK,CACvBI,CAAC,CAAC,QAAQ,CAAAvB,QAAA,CAGTU,WAAW,cAAGf,IAAA,CAACL,QAAQ,EAAC6B,IAAI,CAAEA,IAAK,CAACX,QAAQ,CAAEA,QAAS,CAACC,WAAW,CAAEA,WAAY,CAAE,CAAC,cAC/Ed,IAAA,CAACJ,YAAY,EAACiC,QAAQ,CAAEL,IAAK,CAAE,CAAC,EAPjCA,IAAI,CAACE,EAAE,EAAIF,IAQf,CAEb,CAAC,CACO,CAAC,CACZ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAd,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}