{"ast":null,"code":"import React from'react';import{useEffect,useState}from'react';import{Box,Button,Stack,TextField,Typography}from'@mui/material';import{exerciseOptions,fetchData}from'../utils/fetchData';import HorizontalScrollbar from'./HorizontalScrollbar';// ({setExercises, bodyPart, setBodyPart}) REMEMBER TO PASS IN AS PROPS FOR FUNCTION TO WORK\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SearchExercises=_ref=>{let{setExercises,bodyPart,setBodyPart}=_ref;const[search,setSearch]=useState('');const[bodyParts,setBodyParts]=useState([]);// (2) Create useEffect to fetch the Categories as soon as our page loads\n// the category banner before 'Showing Result' of exercises from search\nuseEffect(()=>{// create a new function called  fetchExercisesData\nconst fetchExercisesData=async()=>{const bodyPartsData=await fetchData('https://exercisedb.p.rapidapi.com/exercises/bodyPartList',exerciseOptions);// once we get the data do ...\nsetBodyParts(['all',...bodyPartsData]);//spread all the body parts we got\n//setBodyParts(['all', ...(Array.isArray(bodyPartsData) ? bodyPartsData : [])]);\n};fetchExercisesData();//we want to call this function immediately when the app loads\n// (3) Now we got data, display it in component below (3a)\n},[]);// we want to call it at the start so the dependency array is [] empty\n// (1)\nconst handleSearch=async()=>{if(search){const exercisesData=await fetchData('https://exercisedb.p.rapidapi.com/exercises',exerciseOptions);//console.log(exercisesData);\nconst searchedExercises=exercisesData.filter(exercise=>exercise.name.toLowerCase().includes(search)||exercise.target.toLowerCase().includes(search)||exercise.equipment.toLowerCase().includes(search)||exercise.bodyPart.toLowerCase().includes(search));setSearch('');// clear the search \nsetExercises(searchedExercises);// from this, we would want to show the exercises somewhere\n}};return/*#__PURE__*/_jsxs(Stack,{id:\"searchExercises\",alignItems:\"center\",mt:\"37px\",justifyContent:\"center\",p:\"20px\",children:[/*#__PURE__*/_jsxs(Typography,{fontWeight:700,sx:{fontSize:{lg:'44px',xs:'30px'}},mb:\"50px\",textAlign:\"center\",children:[\"Awesome Exercises You \",/*#__PURE__*/_jsx(\"br\",{}),\" Should Know\"]}),/*#__PURE__*/_jsxs(Box,{position:\"relative\",mb:\"72px\",children:[/*#__PURE__*/_jsx(TextField,{sx:{input:{fontWeight:'700',border:'none',borderRadius:'4px'},width:{lg:'800px',xs:'350px'},backgroundColor:'#FFF',borderRadius:'40px'},height:\"76px\",value:search,onChange:e=>setSearch(e.target.value.toLowerCase()),placeholder:\"Search Exercises\",type:\"text\"}),/*#__PURE__*/_jsx(Button,{className:\"search-btn\",sx:{bgcolor:'#FF2625',color:'#fff',textTransform:'none',width:{lg:'170px',xs:'80px'},fontSize:{lg:'20px',xs:'14px'},height:'56px',position:'aboslute',right:'0'},onClick:handleSearch,children:\"Search\"})]}),/*#__PURE__*/_jsxs(Box,{xs:{position:'relative',width:'100%',p:'20px'},children:[/*#__PURE__*/_jsx(HorizontalScrollbar,{data:bodyParts,bodyPart:bodyPart,setBodyPart:setBodyPart,isBodyParts:true}),\" \"]})]});};export default SearchExercises;","map":{"version":3,"names":["React","useEffect","useState","Box","Button","Stack","TextField","Typography","exerciseOptions","fetchData","HorizontalScrollbar","jsx","_jsx","jsxs","_jsxs","SearchExercises","_ref","setExercises","bodyPart","setBodyPart","search","setSearch","bodyParts","setBodyParts","fetchExercisesData","bodyPartsData","handleSearch","exercisesData","searchedExercises","filter","exercise","name","toLowerCase","includes","target","equipment","id","alignItems","mt","justifyContent","p","children","fontWeight","sx","fontSize","lg","xs","mb","textAlign","position","input","border","borderRadius","width","backgroundColor","height","value","onChange","e","placeholder","type","className","bgcolor","color","textTransform","right","onClick","data","isBodyParts"],"sources":["/Users/weichinglim/Desktop/fitness-website/src/components/SearchExercises.js"],"sourcesContent":["import React from 'react';\nimport {useEffect, useState} from 'react';\nimport { Box, Button, Stack, TextField, Typography } from '@mui/material';\n\nimport {exerciseOptions, fetchData} from '../utils/fetchData';\nimport HorizontalScrollbar from './HorizontalScrollbar';\n\n// ({setExercises, bodyPart, setBodyPart}) REMEMBER TO PASS IN AS PROPS FOR FUNCTION TO WORK\nconst SearchExercises = ({setExercises, bodyPart, setBodyPart}) => {\n\n    const [search, setSearch] = useState('');\n    const [bodyParts, setBodyParts] = useState([]);\n    \n    // (2) Create useEffect to fetch the Categories as soon as our page loads\n    // the category banner before 'Showing Result' of exercises from search\n    useEffect( () => {\n        // create a new function called  fetchExercisesData\n        const fetchExercisesData = async () => {\n            const bodyPartsData = await fetchData('https://exercisedb.p.rapidapi.com/exercises/bodyPartList', exerciseOptions)\n\n            // once we get the data do ...\n            setBodyParts(['all', ...bodyPartsData]); //spread all the body parts we got\n            //setBodyParts(['all', ...(Array.isArray(bodyPartsData) ? bodyPartsData : [])]);\n\n        \n        }\n\n        fetchExercisesData() //we want to call this function immediately when the app loads\n        // (3) Now we got data, display it in component below (3a)\n    }, []) // we want to call it at the start so the dependency array is [] empty\n    \n    // (1)\n    const handleSearch = async () => {\n        if(search) {\n            const exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\n            //console.log(exercisesData);\n            const searchedExercises = exercisesData.filter(\n                (exercise) => exercise.name.toLowerCase().includes(search)\n                || exercise.target.toLowerCase().includes(search)\n                || exercise.equipment.toLowerCase().includes(search)\n                || exercise.bodyPart.toLowerCase().includes(search)\n            );\n\n            setSearch(''); // clear the search \n            setExercises(searchedExercises); // from this, we would want to show the exercises somewhere\n        }\n    }\n\n    return (\n        <Stack id=\"searchExercises\" alignItems='center' mt='37px' justifyContent='center' p='20px' >\n            <Typography fontWeight={700} sx={{ fontSize: {lg: '44px', xs: '30px'}}} mb='50px' textAlign='center' >\n                Awesome Exercises You <br /> Should Know\n            </Typography>\n            <Box position='relative' mb='72px' >\n                <TextField \n                    sx={{\n                        input: {fontWeight: '700', border:'none', borderRadius:'4px'},\n                        width: { lg:'800px', xs:'350px'},\n                        backgroundColor: '#FFF',\n                        borderRadius: '40px'\n                    }}\n                    height='76px'\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value.toLowerCase())}\n                    placeholder='Search Exercises'\n                    type='text'\n                />\n                <Button className='search-btn'\n                    sx={{\n                        bgcolor: '#FF2625',\n                        color: '#fff',\n                        textTransform:'none',\n                        width: {lg: '170px', xs:'80px'},\n                        fontSize: {lg:'20px', xs:'14px'},\n                        height: '56px',\n                        position: 'aboslute',\n                        right: '0'\n                    }}\n                    onClick={handleSearch}\n                >\n                    Search\n                </Button>\n            </Box>\n            {/* (3a) create another Box component to display the categories */}\n            <Box xs={{position: 'relative', width:'100%', p:'20px'}}>\n                <HorizontalScrollbar data={bodyParts} bodyPart={bodyPart} \n                        setBodyPart={setBodyPart} isBodyParts /> {/* (4) Create HorizontalScrollbar component in the components folder */}\n                {/* (6) bodyPart={bodyPart} == the one user clicked. comes from Home page*/}\n            </Box>\n        </Stack>\n  )\n}\n\nexport default SearchExercises"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}