{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useParams}from'react-router-dom';import{Box}from'@mui/material';import{exerciseOptions,fetchData,youtubeOptions}from'../utils/fetchData';import Detail from'../components/Detail';import ExerciseVideos from'../components/ExerciseVideos';import SimilarExercises from'../components/SimilarExercises';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExerciseDetail=()=>{// useState to get data\nconst[exerciseDetail,setExerciseDetail]=useState({});//initially empty state\nconst[exerciseVideos,setExerciseVideos]=useState([]);const[targetMuscleExercises,setTargetMuscleExercises]=useState([]);const[equipmentExercises,setEquipmentExercises]=useState([]);const{id}=useParams();//access id of the exercise clicked (from end of URL)\n// useEffect to populate it\nuseEffect(()=>{const fetchExercisesData=async()=>{const exerciseDbUrl='https://exercisedb.p.rapidapi.com';const youtubeSearchUrl='https://youtube-search-and-download.p.rapidapi.com';// Start making API calls\nconst exerciseDetailData=await fetchData(\"\".concat(exerciseDbUrl,\"/exercises/exercise/\").concat(id),exerciseOptions);console.log({exerciseDetailData});setExerciseDetail(exerciseDetailData);//Set data\nconst exerciseVideosData=await fetchData(\"\".concat(youtubeSearchUrl,\"/search?query=\").concat(exerciseDetailData.name),youtubeOptions);setExerciseVideos(exerciseVideosData.contents);const targetMuscleExercisesData=await fetchData(\"\".concat(exerciseDbUrl,\"/exercises/target/\").concat(exerciseDetailData.target),exerciseOptions);setTargetMuscleExercises(targetMuscleExercisesData);const equipmentExercisesData=await fetchData(\"\".concat(exerciseDbUrl,\"/exercises/equipment/\").concat(exerciseDetailData.equipment),exerciseOptions);setEquipmentExercises(equipmentExercisesData);};fetchExercisesData();// call the function\n},[id]);// dependency array with id inside. Means: recall this function whenever ID changes\nreturn/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Detail,{exerciseDetail:exerciseDetail}),\" \",/*#__PURE__*/_jsx(ExerciseVideos,{exerciseVideos:exerciseVideos,name:exerciseDetail.name}),/*#__PURE__*/_jsx(SimilarExercises,{targetMuscleExercises:targetMuscleExercises,equipmentExercises:equipmentExercises})]});};export default ExerciseDetail;","map":{"version":3,"names":["React","useEffect","useState","useParams","Box","exerciseOptions","fetchData","youtubeOptions","Detail","ExerciseVideos","SimilarExercises","jsx","_jsx","jsxs","_jsxs","ExerciseDetail","exerciseDetail","setExerciseDetail","exerciseVideos","setExerciseVideos","targetMuscleExercises","setTargetMuscleExercises","equipmentExercises","setEquipmentExercises","id","fetchExercisesData","exerciseDbUrl","youtubeSearchUrl","exerciseDetailData","concat","console","log","exerciseVideosData","name","contents","targetMuscleExercisesData","target","equipmentExercisesData","equipment","children"],"sources":["/Users/weichinglim/Desktop/fitness-website/src/pages/ExerciseDetail.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {Box} from '@mui/material';\n\nimport {exerciseOptions, fetchData, youtubeOptions} from '../utils/fetchData';\nimport Detail from '../components/Detail';\nimport ExerciseVideos from '../components/ExerciseVideos';\nimport SimilarExercises from '../components/SimilarExercises';\n\n\nconst ExerciseDetail = () => {\n\n  // useState to get data\n  const [exerciseDetail, setExerciseDetail] = useState({}); //initially empty state\n  const [exerciseVideos, setExerciseVideos] = useState([]);\n  const [targetMuscleExercises, setTargetMuscleExercises] = useState([]);\n  const [equipmentExercises, setEquipmentExercises] = useState([]);\n  const { id } = useParams(); //access id of the exercise clicked (from end of URL)\n\n  // useEffect to populate it\n  useEffect( () => {\n    const fetchExercisesData = async () => {\n      const exerciseDbUrl = 'https://exercisedb.p.rapidapi.com';\n      const youtubeSearchUrl = 'https://youtube-search-and-download.p.rapidapi.com';\n\n      // Start making API calls\n      const exerciseDetailData = await fetchData(`${exerciseDbUrl}/exercises/exercise/${id}`, exerciseOptions);\n      console.log({exerciseDetailData});\n      setExerciseDetail(exerciseDetailData); //Set data\n\n      const exerciseVideosData = await fetchData(`${youtubeSearchUrl}/search?query=${exerciseDetailData.name}`, youtubeOptions);\n      setExerciseVideos(exerciseVideosData.contents);\n\n      const targetMuscleExercisesData = await fetchData(`${exerciseDbUrl}/exercises/target/${exerciseDetailData.target}`, exerciseOptions);\n      setTargetMuscleExercises(targetMuscleExercisesData);\n\n      const equipmentExercisesData = await fetchData(`${exerciseDbUrl}/exercises/equipment/${exerciseDetailData.equipment}`, exerciseOptions); \n      setEquipmentExercises(equipmentExercisesData);                                                                                                       \n    }\n\n    fetchExercisesData(); // call the function\n  }, [id]); // dependency array with id inside. Means: recall this function whenever ID changes\n\n  return (\n   <Box>\n      <Detail  exerciseDetail={exerciseDetail}/> {/* Pass to Detail component */}\n      <ExerciseVideos exerciseVideos={exerciseVideos} name={exerciseDetail.name} />\n      <SimilarExercises targetMuscleExercises={targetMuscleExercises} equipmentExercises={equipmentExercises} />\n   </Box>\n  )\n}\n\nexport default ExerciseDetail"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAChD,OAAQC,SAAS,KAAO,kBAAkB,CAC1C,OAAQC,GAAG,KAAO,eAAe,CAEjC,OAAQC,eAAe,CAAEC,SAAS,CAAEC,cAAc,KAAO,oBAAoB,CAC7E,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,cAAc,KAAM,8BAA8B,CACzD,MAAO,CAAAC,gBAAgB,KAAM,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG9D,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAE3B;AACA,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;AAC1D,KAAM,CAACgB,cAAc,CAAEC,iBAAiB,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACkB,qBAAqB,CAAEC,wBAAwB,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACtE,KAAM,CAACoB,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAChE,KAAM,CAAEsB,EAAG,CAAC,CAAGrB,SAAS,CAAC,CAAC,CAAE;AAE5B;AACAF,SAAS,CAAE,IAAM,CACf,KAAM,CAAAwB,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,KAAM,CAAAC,aAAa,CAAG,mCAAmC,CACzD,KAAM,CAAAC,gBAAgB,CAAG,oDAAoD,CAE7E;AACA,KAAM,CAAAC,kBAAkB,CAAG,KAAM,CAAAtB,SAAS,IAAAuB,MAAA,CAAIH,aAAa,yBAAAG,MAAA,CAAuBL,EAAE,EAAInB,eAAe,CAAC,CACxGyB,OAAO,CAACC,GAAG,CAAC,CAACH,kBAAkB,CAAC,CAAC,CACjCX,iBAAiB,CAACW,kBAAkB,CAAC,CAAE;AAEvC,KAAM,CAAAI,kBAAkB,CAAG,KAAM,CAAA1B,SAAS,IAAAuB,MAAA,CAAIF,gBAAgB,mBAAAE,MAAA,CAAiBD,kBAAkB,CAACK,IAAI,EAAI1B,cAAc,CAAC,CACzHY,iBAAiB,CAACa,kBAAkB,CAACE,QAAQ,CAAC,CAE9C,KAAM,CAAAC,yBAAyB,CAAG,KAAM,CAAA7B,SAAS,IAAAuB,MAAA,CAAIH,aAAa,uBAAAG,MAAA,CAAqBD,kBAAkB,CAACQ,MAAM,EAAI/B,eAAe,CAAC,CACpIgB,wBAAwB,CAACc,yBAAyB,CAAC,CAEnD,KAAM,CAAAE,sBAAsB,CAAG,KAAM,CAAA/B,SAAS,IAAAuB,MAAA,CAAIH,aAAa,0BAAAG,MAAA,CAAwBD,kBAAkB,CAACU,SAAS,EAAIjC,eAAe,CAAC,CACvIkB,qBAAqB,CAACc,sBAAsB,CAAC,CAC/C,CAAC,CAEDZ,kBAAkB,CAAC,CAAC,CAAE;AACxB,CAAC,CAAE,CAACD,EAAE,CAAC,CAAC,CAAE;AAEV,mBACCV,KAAA,CAACV,GAAG,EAAAmC,QAAA,eACD3B,IAAA,CAACJ,MAAM,EAAEQ,cAAc,CAAEA,cAAe,CAAC,CAAC,IAAC,cAC3CJ,IAAA,CAACH,cAAc,EAACS,cAAc,CAAEA,cAAe,CAACe,IAAI,CAAEjB,cAAc,CAACiB,IAAK,CAAE,CAAC,cAC7ErB,IAAA,CAACF,gBAAgB,EAACU,qBAAqB,CAAEA,qBAAsB,CAACE,kBAAkB,CAAEA,kBAAmB,CAAE,CAAC,EACxG,CAAC,CAET,CAAC,CAED,cAAe,CAAAP,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}