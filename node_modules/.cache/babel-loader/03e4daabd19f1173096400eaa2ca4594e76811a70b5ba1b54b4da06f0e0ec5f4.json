{"ast":null,"code":"var _jsxFileName = \"/Users/weichinglim/Desktop/fitness-website/src/components/Exercises.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Stack, Typography } from '@mui/material';\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport ExerciseCard from './ExerciseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercises = ({\n  exercises,\n  setExercises,\n  bodyPart\n}) => {\n  _s();\n  console.log(exercises);\n  const [currentPage, setCurrentPage] = useState(1);\n  const exercisesPerPage = 9;\n\n  // Calculate to only publish 9 cards per page\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n\n  // const currentExercises = Array.isArray(exercises)\n  // ? exercises.slice(indexOfFirstExercise, indexOfLastExercise)\n  // : [];\n\n  // Paginate function\n  const paginate = (e, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1800,\n      behavior: 'smooth'\n    });\n  };\n\n  // For the bodyPart carts on HorizontalScrollbar\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n      if (bodyPart === 'all') {\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\n      } else {\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions);\n      }\n      setExercises(exercisesData);\n    };\n    fetchExercisesData();\n  }, [bodyPart]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    is: \"exercises\",\n    sx: {\n      mt: {\n        lg: '110px'\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      mb: \"46px\",\n      children: \"Showing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: '110px',\n          xs: '50px'\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: currentExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      mt: \"100px\",\n      alignItems: \"center\",\n      children: exercises.length > exercisesPerPage && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"standard\",\n        shape: \"rounded\",\n        defaultPage: 1,\n        count: Math.ceil(exercises.length / exercisesPerPage),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercises, \"GDYsIxij9y/ZFL42bMqqthZmeP4=\");\n_c = Exercises;\nexport default Exercises;\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useState","useEffect","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","jsxDEV","_jsxDEV","Exercises","exercises","setExercises","bodyPart","_s","console","log","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","e","value","window","scrollTo","top","behavior","fetchExercisesData","exercisesData","is","sx","mt","lg","p","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","direction","gap","xs","flexWrap","justifyContent","map","exercise","index","alignItems","length","color","shape","defaultPage","count","Math","ceil","page","onChange","size","_c","$RefreshReg$"],"sources":["/Users/weichinglim/Desktop/fitness-website/src/components/Exercises.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport {Box, Stack, Typography} from '@mui/material';\n\nimport {exerciseOptions, fetchData} from '../utils/fetchData';\nimport ExerciseCard from './ExerciseCard';\n\nconst Exercises = ({exercises, setExercises, bodyPart}) => {\n  console.log(exercises);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const exercisesPerPage = 9;\n\n  // Calculate to only publish 9 cards per page\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n\n  // const currentExercises = Array.isArray(exercises)\n  // ? exercises.slice(indexOfFirstExercise, indexOfLastExercise)\n  // : [];\n\n  // Paginate function\n  const paginate = (e, value) => {\n    setCurrentPage(value);\n    window.scrollTo({top:1800, behavior:'smooth'});\n  }\n\n  // For the bodyPart carts on HorizontalScrollbar\n  useEffect(() => {\n      const fetchExercisesData = async () => {\n        let exercisesData = [];\n\n        if (bodyPart === 'all') {\n          exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\n        } else {\n          exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions);\n        }\n        setExercises(exercisesData);\n    }\n    fetchExercisesData();\n  }, [bodyPart]);\n\n  return (\n    <Box is=\"exercises\"\n    sx={{mt: {lg:'110px'}}}\n    mt='50px'\n    p='20px'\n    >\n      <Typography variant='h3' mb='46px' >\n        Showing Results\n      </Typography>\n      <Stack direction='row' sx={{gap: {lg:'110px', xs: '50px'}}}\n      flexWrap='wrap' justifyContent='center' >\n        {currentExercises.map((exercise, index) => (\n          <ExerciseCard key={index} exercise={exercise} />\n        ))}\n      </Stack>\n\n      <Stack mt='100px' alignItems='center'>\n        {exercises.length > exercisesPerPage && (\n          <Pagination \n            color='standard'\n            shape='rounded'\n            defaultPage={1} \n            count={Math.ceil(exercises.length / exercisesPerPage)}\n            page={currentPage}\n            onChange={paginate}\n            size='large'\n          />\n        )}\n\n      </Stack>\n    </Box>\n  )\n}\n\nexport default Exercises"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}