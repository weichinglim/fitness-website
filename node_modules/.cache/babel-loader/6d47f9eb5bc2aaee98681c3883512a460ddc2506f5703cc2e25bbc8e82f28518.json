{"ast":null,"code":"var _jsxFileName = \"/Users/weichinglim/Desktop/gym_exercises/src/components/HorizontalScrollbar.js\",\n  _s = $RefreshSig$();\n// import React, {useContext} from 'react';\n// import { Box, Typography } from '@mui/material';\n// import { ScrollMenu, VisibilityContext } from 'react-horizontal-scrolling-menu';\n// //import 'react-horizontal-scrolling-menu/dist/styles.css';\n\n// import BodyPart from './BodyPart'; // Render this inside HorizontalScrollbar\n// import LeftArrowIcon from '../assets/icons/left-arrow.png';\n// import RightArrowIcon from '../assets/icons/right-arrow.png';\n\n// const LeftArrow = () => {\n//     const {scrollPrev} = useContext(VisibilityContext);\n\n//     return (\n//         <Typography onClick={() => scrollPrev()} className='right-arrow' >\n//             <img src={LeftArrowIcon} alt='left-arrow' />\n//         </Typography>\n//     );\n// };\n\n// const RightArrow = () => {\n//     const {scrollNext} = useContext(VisibilityContext);\n\n//     return (\n//         <Typography onClick={() => scrollNext()} className='left-arrow' >\n//             <img src={RightArrowIcon} alt='right-arrow' />\n//         </Typography>\n//     );\n// };\n\n// const HorizontalScrollbar = ({data, bodyPart, setBodyPart}) => {\n// // console.log('setBodyPart in HorizontalScrollbar:', setBodyPart);\n//   return (\n//     <Box sx={{ width: '100%', maxWidth: '960px', overflow: 'hidden', mx: 'auto', position: 'relative' }}>\n//         <ScrollMenu  >\n//             {data.map((item) => (\n//                     <Box\n//                         key={item.id || item}\n//                         itemId={item.id || item}\n//                         title={item.id || item}\n//                         m='0 40px'\n//                         sx={{\n//                             width: '300px',\n//                             minWidth: '300px',\n//                             mx: 2,\n//                           }}\n//                     >\n//                         {/* {item} Now items are listed. (5) Create a BodyPart.js component to display in cards. Render it below */}\n//                         <BodyPart item={item} bodyPart={bodyPart} setBodyPart={setBodyPart} />\n//                     </Box>\n//                 )\n//             )}\n//         </ScrollMenu>\n//     </Box>\n\n//   )\n// }\n\n// export default HorizontalScrollbar\n\nimport React, { useRef } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { ScrollMenu, VisibilityContext } from 'react-horizontal-scrolling-menu';\nimport BodyPart from './BodyPart';\nimport LeftArrowIcon from '../assets/icons/left-arrow.png';\nimport RightArrowIcon from '../assets/icons/right-arrow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HorizontalScrollbar = ({\n  data,\n  bodyPart,\n  setBodyPart\n}) => {\n  _s();\n  const scrollRef = useRef(null);\n  const scrollLeft = () => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollBy({\n        left: -300,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const scrollRight = () => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollBy({\n        left: 300,\n        behavior: 'smooth'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: '960px',\n      mx: 'auto',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      ref: scrollRef,\n      sx: {\n        display: 'flex',\n        overflowX: 'auto',\n        scrollBehavior: 'smooth',\n        pb: 2\n      },\n      children: data.map(item => /*#__PURE__*/_jsxDEV(Box, {\n        itemId: item.id || item,\n        title: item.id || item,\n        sx: {\n          flex: '0 0 auto',\n          width: '300px',\n          mx: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(BodyPart, {\n          item: item,\n          bodyPart: bodyPart,\n          setBodyPart: setBodyPart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, item.id || item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 2,\n        gap: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        onClick: scrollLeft,\n        className: \"left-arrow\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: LeftArrowIcon,\n          alt: \"left-arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        onClick: scrollRight,\n        className: \"right-arrow\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: RightArrowIcon,\n          alt: \"right-arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(HorizontalScrollbar, \"rUl6RJdP9XfufN21BrtKqIOri0o=\");\n_c = HorizontalScrollbar;\nexport default HorizontalScrollbar;\nvar _c;\n$RefreshReg$(_c, \"HorizontalScrollbar\");","map":{"version":3,"names":["React","useRef","Box","Typography","ScrollMenu","VisibilityContext","BodyPart","LeftArrowIcon","RightArrowIcon","jsxDEV","_jsxDEV","HorizontalScrollbar","data","bodyPart","setBodyPart","_s","scrollRef","scrollLeft","current","scrollBy","left","behavior","scrollRight","sx","width","maxWidth","mx","overflow","children","ref","display","overflowX","scrollBehavior","pb","map","item","itemId","id","title","flex","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","mt","gap","onClick","className","src","alt","_c","$RefreshReg$"],"sources":["/Users/weichinglim/Desktop/gym_exercises/src/components/HorizontalScrollbar.js"],"sourcesContent":["// import React, {useContext} from 'react';\n// import { Box, Typography } from '@mui/material';\n// import { ScrollMenu, VisibilityContext } from 'react-horizontal-scrolling-menu';\n// //import 'react-horizontal-scrolling-menu/dist/styles.css';\n\n// import BodyPart from './BodyPart'; // Render this inside HorizontalScrollbar\n// import LeftArrowIcon from '../assets/icons/left-arrow.png';\n// import RightArrowIcon from '../assets/icons/right-arrow.png';\n\n// const LeftArrow = () => {\n//     const {scrollPrev} = useContext(VisibilityContext);\n    \n//     return (\n//         <Typography onClick={() => scrollPrev()} className='right-arrow' >\n//             <img src={LeftArrowIcon} alt='left-arrow' />\n//         </Typography>\n//     );\n// };\n\n// const RightArrow = () => {\n//     const {scrollNext} = useContext(VisibilityContext);\n\n//     return (\n//         <Typography onClick={() => scrollNext()} className='left-arrow' >\n//             <img src={RightArrowIcon} alt='right-arrow' />\n//         </Typography>\n//     );\n// };\n\n// const HorizontalScrollbar = ({data, bodyPart, setBodyPart}) => {\n// // console.log('setBodyPart in HorizontalScrollbar:', setBodyPart);\n//   return (\n//     <Box sx={{ width: '100%', maxWidth: '960px', overflow: 'hidden', mx: 'auto', position: 'relative' }}>\n//         <ScrollMenu  >\n//             {data.map((item) => (\n//                     <Box\n//                         key={item.id || item}\n//                         itemId={item.id || item}\n//                         title={item.id || item}\n//                         m='0 40px'\n//                         sx={{\n//                             width: '300px',\n//                             minWidth: '300px',\n//                             mx: 2,\n//                           }}\n//                     >\n//                         {/* {item} Now items are listed. (5) Create a BodyPart.js component to display in cards. Render it below */}\n//                         <BodyPart item={item} bodyPart={bodyPart} setBodyPart={setBodyPart} />\n//                     </Box>\n//                 )\n//             )}\n//         </ScrollMenu>\n//     </Box>\n    \n//   )\n// }\n\n// export default HorizontalScrollbar\n\nimport React, { useRef } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { ScrollMenu, VisibilityContext } from 'react-horizontal-scrolling-menu';\nimport BodyPart from './BodyPart';\n\nimport LeftArrowIcon from '../assets/icons/left-arrow.png';\nimport RightArrowIcon from '../assets/icons/right-arrow.png';\n\nconst HorizontalScrollbar = ({ data, bodyPart, setBodyPart }) => {\n  const scrollRef = useRef(null);\n\n  const scrollLeft = () => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollBy({ left: -300, behavior: 'smooth' });\n    }\n  };\n\n  const scrollRight = () => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollBy({ left: 300, behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <Box sx={{ width: '100%', maxWidth: '960px', mx: 'auto', overflow: 'hidden' }}>\n      {/* Scrollable area */}\n      <Box\n        ref={scrollRef}\n        sx={{\n          display: 'flex',\n          overflowX: 'auto',\n          scrollBehavior: 'smooth',\n          pb: 2,\n        }}\n      >\n        {data.map((item) => (\n          <Box\n            key={item.id || item}\n            itemId={item.id || item}\n            title={item.id || item}\n            sx={{\n              flex: '0 0 auto',\n              width: '300px',\n              mx: 2,\n            }}\n          >\n            <BodyPart item={item} bodyPart={bodyPart} setBodyPart={setBodyPart} />\n          </Box>\n        ))}\n      </Box>\n\n      {/* Arrows below the scroll menu */}\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2, gap: 4 }}>\n        <Typography onClick={scrollLeft} className='left-arrow'>\n          <img src={LeftArrowIcon} alt='left-arrow' />\n        </Typography>\n        <Typography onClick={scrollRight} className='right-arrow'>\n          <img src={RightArrowIcon} alt='right-arrow' />\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default HorizontalScrollbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}